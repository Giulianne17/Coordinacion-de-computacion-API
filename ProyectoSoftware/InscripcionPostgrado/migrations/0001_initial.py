# Generated by Django 2.0.2 on 2018-06-15 01:21

import InscripcionPostgrado.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import re


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Asignatura',
            fields=[
                ('Cod_asignatura', models.CharField(max_length=7, primary_key=True, serialize=False, validators=[django.core.validators.RegexValidator(message='Código inválido', regex='[A-Z]{2}-[0-9]{4}')])),
                ('Nombre_asig', models.CharField(max_length=250, validators=[django.core.validators.RegexValidator(re.compile('^[\\w+\\s]+$'), 'Nombre inválido', 'invalid')])),
                ('Creditos', models.IntegerField(validators=[django.core.validators.MaxValueValidator(30, message='Número de creditos inválidos.'), django.core.validators.MinValueValidator(1, message='Número de creditos inválidos.')])),
                ('Fecha', models.DateField(auto_now_add=True)),
                ('Visto', models.BooleanField(default=False)),
                ('Programa', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='Coordinacion',
            fields=[
                ('Cod_coordinacion', models.CharField(max_length=2, primary_key=True, serialize=False, validators=[django.core.validators.RegexValidator(message='Codigo incorrecto', regex='[A-Z]{2}')])),
                ('Nombre_coordinacion', models.CharField(max_length=30, validators=[django.core.validators.RegexValidator(re.compile('^[\\w+\\s]+$'), 'Nombre incorrecto', 'invalid')])),
            ],
        ),
        migrations.CreateModel(
            name='Credito',
            fields=[
                ('Nro_Tarjeta', models.CharField(max_length=18, primary_key=True, serialize=False, validators=[django.core.validators.RegexValidator(message='Nro tarjeta incorrecto', regex='[0-9]{18}')])),
                ('Fecha_Vence', models.DateField()),
                ('Nombre_Banco', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Debito',
            fields=[
                ('Nro_Cuenta', models.CharField(max_length=20, primary_key=True, serialize=False, validators=[django.core.validators.RegexValidator(message='Nro cuenta incorrecto', regex='[0-9]{20}')])),
                ('Nro_Tarjeta', models.CharField(max_length=18, validators=[django.core.validators.RegexValidator(message='Nro tarjeta incorrecto', regex='[0-9]{18}')])),
                ('Tipo', models.CharField(max_length=9, validators=[InscripcionPostgrado.models.tipo_debito_restr])),
                ('Nombre_Banco', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Decanato',
            fields=[
                ('Nombre_decanato', models.CharField(max_length=30, primary_key=True, serialize=False, validators=[django.core.validators.RegexValidator(message='Nombre incorrecto', regex='[a-zA-Z]')])),
            ],
        ),
        migrations.CreateModel(
            name='Deposito',
            fields=[
                ('Referencia', models.CharField(max_length=20, primary_key=True, serialize=False, validators=[django.core.validators.RegexValidator(message='Nro Referencia incorrecto', regex='[0-9]{20}')])),
            ],
        ),
        migrations.CreateModel(
            name='Estudiante',
            fields=[
                ('Carnet', models.CharField(max_length=8, primary_key=True, serialize=False, validators=[django.core.validators.RegexValidator(message='Carnet incorrecto', regex='[0-9]{2}\\-[0-9]{5}')])),
                ('Apellidos', models.CharField(max_length=30, validators=[django.core.validators.RegexValidator(re.compile('^[\\w+\\s]+$'), 'Apellido incorrecto', 'invalid')])),
                ('Nombres', models.CharField(max_length=30, validators=[django.core.validators.RegexValidator(re.compile('^[\\w+\\s]+$'), 'Nombre incorrecto', 'invalid')])),
            ],
        ),
        migrations.CreateModel(
            name='MedioPago',
            fields=[
                ('Postiza', models.AutoField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Pertenece',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Cod_coordinacion', models.ForeignKey(max_length=2, on_delete=django.db.models.deletion.CASCADE, to='InscripcionPostgrado.Coordinacion')),
                ('Nombre_decanato', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='InscripcionPostgrado.Decanato')),
            ],
        ),
        migrations.CreateModel(
            name='Profesor',
            fields=[
                ('Id_prof', models.CharField(max_length=8, primary_key=True, serialize=False, validators=[django.core.validators.RegexValidator(message='Id incorrecto', regex='^[0-9]+$')])),
                ('Apellidos', models.CharField(max_length=30, validators=[django.core.validators.RegexValidator(re.compile('^[\\w+\\s]+[^\\W\\d_]+$'), 'Apellido incorrecto', 'invalid')])),
                ('Nombres', models.CharField(max_length=30, validators=[InscripcionPostgrado.models.nombre_profesor_restr, django.core.validators.RegexValidator(re.compile('^[\\w+\\s]+[^\\W\\d_]+$'), 'Nombre incorrecto', 'invalid')])),
                ('Cod_coordinacion', models.ForeignKey(max_length=2, on_delete=django.db.models.deletion.CASCADE, to='InscripcionPostgrado.Coordinacion')),
            ],
        ),
        migrations.CreateModel(
            name='Se_Ofrece',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Horario', models.CharField(max_length=5, validators=[InscripcionPostgrado.models.hora_se_ofrece_restr])),
                ('Dia', models.CharField(choices=[('LUNES', 'Lunes'), ('MARTES', 'Martes'), ('MIERCOLES', 'Miércoles'), ('JUEVES', 'Jueves'), ('VIERNES', 'Viernes'), ('SABADO', 'Sábado')], max_length=9)),
                ('Periodo', models.CharField(choices=[('EM', 'ENE-MAR'), ('AJ', 'ABR-JUL'), ('V', 'VERANO'), ('SD', 'SEP-DIC')], max_length=7)),
                ('Anio', models.IntegerField(validators=[InscripcionPostgrado.models.anio_trimestre_restr])),
                ('Cod_asignatura', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='InscripcionPostgrado.Asignatura')),
                ('Cod_coordinacion', models.ForeignKey(max_length=2, on_delete=django.db.models.deletion.CASCADE, to='InscripcionPostgrado.Coordinacion')),
                ('Id_prof', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='InscripcionPostgrado.Profesor')),
            ],
        ),
        migrations.CreateModel(
            name='Transferencia',
            fields=[
                ('Nro_Referencia', models.CharField(max_length=20, primary_key=True, serialize=False, validators=[django.core.validators.RegexValidator(message='Nro Referencia incorrecto', regex='[0-9]{20}')])),
                ('Postiza', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='InscripcionPostgrado.MedioPago')),
            ],
        ),
        migrations.CreateModel(
            name='Cursa',
            fields=[
                ('Carnet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='InscripcionPostgrado.Estudiante')),
                ('Periodo', models.CharField(choices=[('EM', 'ENE-MAR'), ('AJ', 'ABR-JUL'), ('V', 'VERANO'), ('SD', 'SEP-DIC')], max_length=7)),
                ('Anio', models.IntegerField(validators=[InscripcionPostgrado.models.anio_trimestre_restr])),
            ],
        ),
        migrations.CreateModel(
            name='Paga_Con',
            fields=[
                ('Precio', models.DecimalField(decimal_places=4, max_digits=19)),
                ('Carnet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='InscripcionPostgrado.Estudiante')),
                ('Periodo', models.CharField(choices=[('EM', 'ENE-MAR'), ('AJ', 'ABR-JUL'), ('V', 'VERANO'), ('SD', 'SEP-DIC')], max_length=7)),
                ('Anio', models.IntegerField(validators=[InscripcionPostgrado.models.anio_trimestre_restr])),
                ('Postiza', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='InscripcionPostgrado.MedioPago')),
            ],
        ),
        migrations.AddField(
            model_name='deposito',
            name='Postiza',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='InscripcionPostgrado.MedioPago'),
        ),
        migrations.AddField(
            model_name='debito',
            name='Postiza',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='InscripcionPostgrado.MedioPago'),
        ),
        migrations.AddField(
            model_name='credito',
            name='Postiza',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='InscripcionPostgrado.MedioPago'),
        ),
        migrations.AddField(
            model_name='asignatura',
            name='Cod_coordinacion',
            field=models.ForeignKey(max_length=2, on_delete=django.db.models.deletion.CASCADE, to='InscripcionPostgrado.Coordinacion'),
        ),
        migrations.AlterUniqueTogether(
            name='se_ofrece',
            unique_together={('Id_prof', 'Cod_asignatura', 'Horario', 'Periodo', 'Anio', 'Cod_coordinacion')},
        ),
        migrations.AlterUniqueTogether(
            name='pertenece',
            unique_together={('Nombre_decanato', 'Cod_coordinacion')},
        ),
        migrations.AddField(
            model_name='cursa',
            name='Cod_asignatura',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='InscripcionPostgrado.Asignatura'),
        ),
        migrations.AlterUniqueTogether(
            name='paga_con',
            unique_together={('Carnet', 'Postiza', 'Periodo', 'Anio')},
        ),
        migrations.AlterUniqueTogether(
            name='cursa',
            unique_together={('Carnet', 'Cod_asignatura', 'Periodo', 'Anio')},
        ),
    ]
